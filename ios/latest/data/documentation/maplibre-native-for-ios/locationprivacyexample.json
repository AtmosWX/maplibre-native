{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This example shows how to request a precise location with "},{"type":"codeVoice","code":"MLNLocationManager"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"First of all you need to prepare your "},{"type":"codeVoice","code":"Info.plist"},{"type":"text","text":". You need to provide a description why your app needs to access location:"}]},{"type":"codeListing","syntax":"plist","code":["<key>NSLocationWhenInUseUsageDescription<\/key>","<string>Dummy Location When In Use Description<\/string>"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"As well as a description why your app needs precise location."}]},{"type":"codeListing","syntax":"plist","code":["<key>NSLocationTemporaryUsageDescriptionDictionary<\/key>","<dict>","  <key>MLNAccuracyAuthorizationDescription<\/key>","  <string>Dummy Precise Location Description<\/string>","<\/dict>"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"Coordinator"},{"type":"text","text":" defined below is also the "},{"type":"codeVoice","code":"MLNMapViewDelegate"},{"type":"text","text":". When the location manager authorization changes it will call the relevant method. If precise location has not been granted, a button is shown at the bottom of the map."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"ImpreciseLocation.png"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"When the button is pressed a pop-up with the description we set in "},{"type":"codeVoice","code":"Info.plist"},{"type":"text","text":" will be shown:"}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"PreciseLocationRequestPopup.png"}]},{"type":"codeListing","syntax":"swift","code":["enum LocationAccuracyState {","    case unknown","    case reducedAccuracy","    case fullAccuracy","}","","class Coordinator: NSObject, MLNMapViewDelegate {","    @Binding var mapView: MLNMapView","    @Binding var locationAccuracy: LocationAccuracyState","    var pannedToUserLocation = false","","    init(mapView: Binding<MLNMapView>, locationAccuracy: Binding<LocationAccuracyState>) {","        _mapView = mapView","        _locationAccuracy = locationAccuracy","    }","","    func mapView(_: MLNMapView, didChangeLocationManagerAuthorization manager: MLNLocationManager) {","        guard let accuracySetting = manager.accuracyAuthorization else {","            return","        }","","        switch accuracySetting() {","        case .fullAccuracy:","            locationAccuracy = .fullAccuracy","        case .reducedAccuracy:","            locationAccuracy = .reducedAccuracy","        @unknown default:","            locationAccuracy = .unknown","        }","    }","","    \/\/ when a location is available for the first time, we fly to it","    func mapView(_ mapView: MLNMapView, didUpdate _: MLNUserLocation?) {","        if pannedToUserLocation {","            return","        }","        guard let userLocation = mapView.userLocation else {","            print(\"User location is currently not available.\")","            return","        }","        mapView.fly(to: MLNMapCamera(lookingAtCenter: userLocation.coordinate, altitude: 100_000, pitch: 0, heading: 0))","    }","}","","struct LocationPrivacyExample: UIViewRepresentable {","    @Binding var mapView: MLNMapView","    @Binding var locationAccuracy: LocationAccuracyState","","    func makeCoordinator() -> Coordinator {","        Coordinator(mapView: $mapView, locationAccuracy: $locationAccuracy)","    }","","    func makeUIView(context: Context) -> MLNMapView {","        let mapView = MLNMapView()","        mapView.showsUserLocation = true","        mapView.delegate = context.coordinator","","        return mapView","    }","","    func updateUIView(_: MLNMapView, context _: Context) {}","}","","struct LocationPrivacyExampleView: View {","    @State private var mapView = MLNMapView()","    @State var locationAccuracy: LocationAccuracyState = .unknown","","    var body: some View {","        VStack {","            LocationPrivacyExample(mapView: $mapView, locationAccuracy: $locationAccuracy)","                .edgesIgnoringSafeArea(.all)","","            if locationAccuracy == LocationAccuracyState.reducedAccuracy {","                Button(\"Request Precise Location\") {","                    handleButtonPress(mapView: mapView)","                }","                .padding()","                .background(Color.blue)","                .foregroundColor(.white)","                .cornerRadius(8)","            }","        }","    }","","    private func handleButtonPress(mapView: MLNMapView) {","        print(\"Requesting precice location\")","        switch locationAccuracy {","        case .reducedAccuracy:","            let purposeKey = \"MLNAccuracyAuthorizationDescription\"","            mapView.locationManager.requestTemporaryFullAccuracyAuthorization!(withPurposeKey: purposeKey)","        default:","            break","        }","    }","}"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/maplibre-native-for-ios\/locationprivacyexample"],"traits":[{"interfaceLanguage":"occ"}]}],"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre-Native-for-iOS\/LocationPrivacyExample","interfaceLanguage":"occ"},"abstract":[{"type":"text","text":"Requesting precise location with "},{"type":"codeVoice","code":"MLNLocationManager"},{"type":"text","text":"."}],"kind":"article","metadata":{"roleHeading":"Article","title":"User Location & Location Privacy","role":"article","modules":[{"name":"MapLibre"}]},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre"]]},"references":{"PreciseLocationRequestPopup.png":{"alt":null,"type":"image","identifier":"PreciseLocationRequestPopup.png","variants":[{"url":"\/images\/PreciseLocationRequestPopup@2x.png","traits":["2x","light"]}]},"doc://org.swift.MyProject/documentation/MapLibre":{"role":"collection","title":"MapLibre","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","kind":"symbol","type":"topic","url":"\/documentation\/maplibre"},"ImpreciseLocation.png":{"alt":null,"type":"image","identifier":"ImpreciseLocation.png","variants":[{"url":"\/images\/ImpreciseLocation@2x.png","traits":["2x","light"]}]}}}