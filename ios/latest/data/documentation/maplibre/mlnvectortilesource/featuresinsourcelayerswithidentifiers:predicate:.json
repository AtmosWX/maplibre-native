{"metadata":{"navigatorTitle":[{"text":"featuresInSourceLayersWithIdentifiers:predicate:","kind":"identifier"}],"fragments":[{"text":"- ","kind":"text"},{"text":"featuresInSourceLayersWithIdentifiers:predicate:","kind":"identifier"}],"modules":[{"name":"MapLibre"}],"symbolKind":"method","role":"symbol","externalID":"c:objc(cs)MLNVectorTileSource(im)featuresInSourceLayersWithIdentifiers:predicate:","title":"featuresInSourceLayersWithIdentifiers:predicate:","roleHeading":"Instance Method"},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNVectorTileSource"]]},"sections":[],"abstract":[{"text":"Returns an array of map features loaded by this source, restricted to the given","type":"text"},{"type":"text","text":" "},{"type":"text","text":"source layers and filtered by the given predicate."}],"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNVectorTileSource\/featuresInSourceLayersWithIdentifiers:predicate:"},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnvectortilesource\/featuresinsourcelayerswithidentifiers:predicate:"]}],"primaryContentSections":[{"declarations":[{"languages":["occ"],"platforms":["iOS"],"tokens":[{"text":"- (","kind":"text"},{"preciseIdentifier":"c:Q$objc(cs)NSArray","kind":"typeIdentifier","text":"NSArray<id<MLNFeature>>"},{"text":" *) ","kind":"text"},{"kind":"identifier","text":"featuresInSourceLayersWithIdentifiers:"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"NSSet<NSString *>","preciseIdentifier":"c:Q$objc(cs)NSSet"},{"kind":"text","text":" *) "},{"kind":"internalParam","text":"sourceLayerIdentifiers"},{"kind":"text","text":" "},{"kind":"identifier","text":"predicate:"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"NSPredicate","preciseIdentifier":"c:objc(cs)NSPredicate"},{"text":" *) ","kind":"text"},{"kind":"internalParam","text":"predicate"},{"text":";","kind":"text"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"The source layers to include in the query. Only","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the features contained in these source layers are included in the returned"},{"text":" ","type":"text"},{"text":"array. This array may not be empty.","type":"text"}],"type":"paragraph"}],"name":"sourceLayerIdentifiers"},{"name":"predicate","content":[{"type":"paragraph","inlineContent":[{"text":"A predicate to filter the returned features. Use ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" to"},{"type":"text","text":" "},{"type":"text","text":"include all loaded features."}]}]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"An array of objects conforming to the ","type":"text"},{"type":"codeVoice","code":"MLNFeature"},{"text":" protocol that","type":"text"},{"text":" ","type":"text"},{"text":"represent features loaded by the source that match the predicate.","type":"text"}]}]},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Each object in the returned array represents a feature loaded by the source and"},{"type":"text","text":" "},{"type":"text","text":"provides access to attributes specified as part of the loaded feature. The"},{"text":" ","type":"text"},{"type":"text","text":"source loads a feature if the source is added to an "},{"type":"codeVoice","code":"MLNMapView"},{"type":"text","text":"’s style; that"},{"type":"text","text":" "},{"type":"text","text":"style has a layer that uses the source; and the map view has recently scrolled"},{"text":" ","type":"text"},{"type":"text","text":"to the region containing the feature."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Features come from tiled vector data that is converted to tiles internally, so"},{"type":"text","text":" "},{"type":"text","text":"feature geometries are clipped at tile boundaries and features may appear"},{"type":"text","text":" "},{"type":"text","text":"duplicated across tiles. For example, suppose part of a lengthy polyline"},{"text":" ","type":"text"},{"type":"text","text":"representing a road has recently scrolled into view. The resulting array"},{"type":"text","text":" "},{"type":"text","text":"includes those parts of the road that lie within the map tiles that the source"},{"text":" ","type":"text"},{"type":"text","text":"has loaded, even if the road extends into other tiles. The portion of the road"},{"text":" ","type":"text"},{"text":"within each map tile is included individually.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Returned features may not necessarily be visible to the user at the time they","type":"text"},{"type":"text","text":" "},{"type":"text","text":"are loaded: the style may contain a layer that forces the source’s tiles to"},{"type":"text","text":" "},{"text":"load but filters out the features in question, preventing them from being","type":"text"},{"type":"text","text":" "},{"type":"text","text":"drawn. To obtain only "},{"type":"emphasis","inlineContent":[{"text":"visible","type":"text"}]},{"text":" features, use the","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"-[MLNMapView visibleFeaturesAtPoint:inStyleLayersWithIdentifiers:predicate:]"},{"text":" ","type":"text"},{"type":"text","text":"or"},{"text":" ","type":"text"},{"type":"codeVoice","code":"-[MLNMapView visibleFeaturesInRect:inStyleLayersWithIdentifiers:predicate:]"},{"text":" ","type":"text"},{"text":"method.","type":"text"}]}],"kind":"content"}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNVectorTileSource":{"kind":"symbol","abstract":[{"type":"codeVoice","code":"MLNVectorTileSource"},{"text":" is a map content source that supplies tiled vector data","type":"text"},{"type":"text","text":" "},{"type":"text","text":"in "},{"text":"Mapbox Vector Tile","type":"text"},{"type":"text","text":" format"},{"type":"text","text":" "},{"type":"text","text":"to be shown on the map. The location of and metadata about the tiles are"},{"text":" ","type":"text"},{"text":"defined either by an option dictionary or by an external file that conforms to","type":"text"},{"type":"text","text":" "},{"text":"the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"TileJSON specification"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"A vector tile source is added to an ","type":"text"},{"type":"codeVoice","code":"MLNStyle"},{"text":" object along with one or more","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"MLNVectorStyleLayer"},{"text":" objects. A vector style layer defines the appearance of","type":"text"},{"text":" ","type":"text"},{"text":"any content supplied by the vector tile source.","type":"text"}],"type":"topic","fragments":[{"text":"MLNVectorTileSource","kind":"identifier"}],"role":"symbol","url":"\/documentation\/maplibre\/mlnvectortilesource","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNVectorTileSource","title":"MLNVectorTileSource"},"doc://org.swift.MyProject/documentation/MapLibre/MLNVectorTileSource/featuresInSourceLayersWithIdentifiers:predicate:":{"role":"symbol","url":"\/documentation\/maplibre\/mlnvectortilesource\/featuresinsourcelayerswithidentifiers:predicate:","type":"topic","abstract":[{"text":"Returns an array of map features loaded by this source, restricted to the given","type":"text"},{"type":"text","text":" "},{"text":"source layers and filtered by the given predicate.","type":"text"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNVectorTileSource\/featuresInSourceLayersWithIdentifiers:predicate:","fragments":[{"text":"- ","kind":"text"},{"text":"featuresInSourceLayersWithIdentifiers:predicate:","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"featuresInSourceLayersWithIdentifiers:predicate:","kind":"identifier"}],"title":"featuresInSourceLayersWithIdentifiers:predicate:"},"doc://org.swift.MyProject/documentation/MapLibre":{"role":"collection","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"kind":"symbol","type":"topic","title":"MapLibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","url":"\/documentation\/maplibre"}}}