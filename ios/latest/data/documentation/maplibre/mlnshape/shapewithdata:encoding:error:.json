{"abstract":[{"type":"text","text":"Returns an "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true},{"text":" object initialized with the given data interpreted as a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"string containing a GeoJSON object."}],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"]]},"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape\/shapeWithData:encoding:error:","interfaceLanguage":"occ"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["occ"],"platforms":["iOS"],"tokens":[{"text":"+ (","kind":"text"},{"preciseIdentifier":"c:objc(cs)MLNShape","text":"MLNShape","kind":"typeIdentifier","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"kind":"text","text":" *) "},{"kind":"identifier","text":"shapeWithData:"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"NSData","preciseIdentifier":"c:objc(cs)NSData"},{"text":" *) ","kind":"text"},{"text":"data","kind":"internalParam"},{"kind":"text","text":" "},{"text":"encoding:","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"c:@T@NSStringEncoding","text":"NSStringEncoding"},{"text":") ","kind":"text"},{"kind":"internalParam","text":"encoding"},{"kind":"text","text":" "},{"kind":"identifier","text":"error:"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSError","text":"NSError"},{"kind":"text","text":" * *) "},{"text":"outError","kind":"internalParam"},{"text":";","kind":"text"}]}]},{"kind":"parameters","parameters":[{"name":"data","content":[{"inlineContent":[{"type":"text","text":"String data containing GeoJSON source code."}],"type":"paragraph"}]},{"name":"encoding","content":[{"inlineContent":[{"type":"text","text":"The encoding used by "},{"code":"data","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]},{"name":"outError","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Upon return, if an error has occurred, a pointer to an"},{"type":"text","text":" "},{"code":"NSError","type":"codeVoice"},{"type":"text","text":" object describing the error. Pass in "},{"type":"codeVoice","code":"NULL"},{"type":"text","text":" to ignore any error."}]}]}]},{"content":[{"type":"heading","text":"Return Value","level":2,"anchor":"return-value"},{"inlineContent":[{"text":"An ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true,"type":"reference"},{"type":"text","text":" object representation of "},{"type":"codeVoice","code":"data"},{"type":"text","text":", or "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if "},{"code":"data","type":"codeVoice"},{"type":"text","text":" could"},{"type":"text","text":" "},{"text":"not be parsed as valid GeoJSON source code. If ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":", ","type":"text"},{"code":"outError","type":"codeVoice"},{"type":"text","text":" contains an"},{"type":"text","text":" "},{"code":"NSError","type":"codeVoice"},{"type":"text","text":" object describing the problem."}],"type":"paragraph"}],"kind":"content"},{"content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"inlineContent":[{"type":"text","text":"If the GeoJSON object is a geometry, the returned value is a kind of"},{"text":" ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true},{"text":". If it is a feature object, the returned value is a kind of","type":"text"},{"text":" ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"type":"text","text":" that conforms to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"type":"text","text":" protocol. If it is a feature"},{"type":"text","text":" "},{"text":"collection object, the returned value is an instance of","type":"text"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature","isActive":true},{"text":".","type":"text"}],"type":"paragraph"},{"level":3,"anchor":"Example","type":"heading","text":"Example"},{"type":"codeListing","syntax":"swift","code":["let url = mainBundle.url(forResource: \"amsterdam\", withExtension: \"geojson\")!","let data = try! Data(contentsOf: url)","let feature = try! MLNShape(data: data, encoding: String.Encoding.utf8.rawValue) as!","MLNShapeCollectionFeature"]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnshape\/shapewithdata:encoding:error:"]}],"kind":"symbol","metadata":{"modules":[{"name":"MapLibre"}],"title":"shapeWithData:encoding:error:","externalID":"c:objc(cs)MLNShape(cm)shapeWithData:encoding:error:","navigatorTitle":[{"kind":"identifier","text":"shapeWithData:encoding:error:"}],"symbolKind":"method","roleHeading":"Type Method","fragments":[{"kind":"text","text":"+ "},{"text":"shapeWithData:encoding:error:","kind":"identifier"}],"role":"symbol"},"references":{"doc://org.swift.MyProject/documentation/MapLibre":{"title":"MapLibre","url":"\/documentation\/maplibre","type":"topic","role":"collection","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","kind":"symbol","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNShape":{"fragments":[{"kind":"identifier","text":"MLNShape"}],"abstract":[{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"type":"text","text":" is an abstract class that represents a shape or annotation. Shapes"},{"text":" ","type":"text"},{"text":"constitute the content of a map â€” not only the overlays atop the map, but also","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the content that forms the base map."}],"title":"MLNShape","type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","kind":"symbol","role":"symbol","url":"\/documentation\/maplibre\/mlnshape"},"doc://org.swift.MyProject/documentation/MapLibre/MLNShape/shapeWithData:encoding:error:":{"navigatorTitle":[{"kind":"identifier","text":"shapeWithData:encoding:error:"}],"url":"\/documentation\/maplibre\/mlnshape\/shapewithdata:encoding:error:","type":"topic","title":"shapeWithData:encoding:error:","kind":"symbol","fragments":[{"kind":"text","text":"+ "},{"text":"shapeWithData:encoding:error:","kind":"identifier"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape\/shapeWithData:encoding:error:","abstract":[{"text":"Returns an ","type":"text"},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true,"type":"reference"},{"text":" object initialized with the given data interpreted as a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"string containing a GeoJSON object."}],"role":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNShapeCollectionFeature":{"role":"symbol","abstract":[{"type":"text","text":"An "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature","isActive":true},{"text":" object associates a shape collection with an","type":"text"},{"text":" ","type":"text"},{"text":"optional identifier and attributes.","type":"text"}],"url":"\/documentation\/maplibre\/mlnshapecollectionfeature","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature","type":"topic","kind":"symbol","title":"MLNShapeCollectionFeature","fragments":[{"kind":"identifier","text":"MLNShapeCollectionFeature"}]}}}