{"abstract":[{"text":"Returns an ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true},{"text":" object initialized with the given data interpreted as a","type":"text"},{"type":"text","text":" "},{"text":"string containing a GeoJSON object.","type":"text"}],"sections":[],"variants":[{"paths":["\/documentation\/maplibre\/mlnshape\/shapewithdata:encoding:error:"],"traits":[{"interfaceLanguage":"occ"}]}],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"]]},"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape\/shapeWithData:encoding:error:"},"kind":"symbol","metadata":{"role":"symbol","modules":[{"name":"MapLibre"}],"roleHeading":"Type Method","symbolKind":"method","title":"shapeWithData:encoding:error:","navigatorTitle":[{"text":"shapeWithData:encoding:error:","kind":"identifier"}],"externalID":"c:objc(cs)MLNShape(cm)shapeWithData:encoding:error:","fragments":[{"text":"+ ","kind":"text"},{"kind":"identifier","text":"shapeWithData:encoding:error:"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"text","text":"+ ("},{"text":"MLNShape","kind":"typeIdentifier","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","preciseIdentifier":"c:objc(cs)MLNShape"},{"kind":"text","text":" *) "},{"kind":"identifier","text":"shapeWithData:"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:objc(cs)NSData","text":"NSData","kind":"typeIdentifier"},{"text":" *) ","kind":"text"},{"text":"data","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"encoding:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"NSStringEncoding","kind":"typeIdentifier","preciseIdentifier":"c:@T@NSStringEncoding"},{"text":") ","kind":"text"},{"text":"encoding","kind":"internalParam"},{"kind":"text","text":" "},{"kind":"identifier","text":"error:"},{"text":"(","kind":"text"},{"text":"NSError","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSError"},{"kind":"text","text":" * *) "},{"kind":"internalParam","text":"outError"},{"text":";","kind":"text"}],"platforms":["iOS"],"languages":["occ"]}]},{"kind":"parameters","parameters":[{"name":"data","content":[{"type":"paragraph","inlineContent":[{"text":"String data containing GeoJSON source code.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The encoding used by "},{"code":"data","type":"codeVoice"},{"type":"text","text":"."}]}],"name":"encoding"},{"content":[{"inlineContent":[{"type":"text","text":"Upon return, if an error has occurred, a pointer to an"},{"text":" ","type":"text"},{"type":"codeVoice","code":"NSError"},{"type":"text","text":" object describing the error. Pass in "},{"code":"NULL","type":"codeVoice"},{"text":" to ignore any error.","type":"text"}],"type":"paragraph"}],"name":"outError"}]},{"content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"An ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true},{"text":" object representation of ","type":"text"},{"code":"data","type":"codeVoice"},{"text":", or ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if "},{"code":"data","type":"codeVoice"},{"type":"text","text":" could"},{"text":" ","type":"text"},{"type":"text","text":"not be parsed as valid GeoJSON source code. If "},{"type":"codeVoice","code":"nil"},{"text":", ","type":"text"},{"type":"codeVoice","code":"outError"},{"text":" contains an","type":"text"},{"type":"text","text":" "},{"code":"NSError","type":"codeVoice"},{"type":"text","text":" object describing the problem."}]}],"kind":"content"},{"kind":"content","content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"If the GeoJSON object is a geometry, the returned value is a kind of"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"type":"text","text":". If it is a feature object, the returned value is a kind of"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"type":"text","text":" that conforms to the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape"},{"text":" protocol. If it is a feature","type":"text"},{"text":" ","type":"text"},{"text":"collection object, the returned value is an instance of","type":"text"},{"type":"text","text":" "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature","type":"reference","isActive":true},{"text":".","type":"text"}],"type":"paragraph"},{"text":"Example","anchor":"Example","type":"heading","level":3},{"type":"codeListing","syntax":"swift","code":["let url = mainBundle.url(forResource: \"amsterdam\", withExtension: \"geojson\")!","let data = try! Data(contentsOf: url)","let feature = try! MLNShape(data: data, encoding: String.Encoding.utf8.rawValue) as!","MLNShapeCollectionFeature"]}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNShapeCollectionFeature":{"abstract":[{"type":"text","text":"An "},{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature","isActive":true,"type":"reference"},{"type":"text","text":" object associates a shape collection with an"},{"text":" ","type":"text"},{"type":"text","text":"optional identifier and attributes."}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeCollectionFeature","kind":"symbol","url":"\/documentation\/maplibre\/mlnshapecollectionfeature","title":"MLNShapeCollectionFeature","type":"topic","role":"symbol","fragments":[{"kind":"identifier","text":"MLNShapeCollectionFeature"}]},"doc://org.swift.MyProject/documentation/MapLibre":{"url":"\/documentation\/maplibre","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","kind":"symbol","title":"MapLibre","role":"collection"},"doc://org.swift.MyProject/documentation/MapLibre/MLNShape/shapeWithData:encoding:error:":{"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Returns an "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true},{"type":"text","text":" object initialized with the given data interpreted as a"},{"type":"text","text":" "},{"text":"string containing a GeoJSON object.","type":"text"}],"fragments":[{"kind":"text","text":"+ "},{"text":"shapeWithData:encoding:error:","kind":"identifier"}],"role":"symbol","url":"\/documentation\/maplibre\/mlnshape\/shapewithdata:encoding:error:","title":"shapeWithData:encoding:error:","navigatorTitle":[{"text":"shapeWithData:encoding:error:","kind":"identifier"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape\/shapeWithData:encoding:error:"},"doc://org.swift.MyProject/documentation/MapLibre/MLNShape":{"type":"topic","fragments":[{"kind":"identifier","text":"MLNShape"}],"role":"symbol","url":"\/documentation\/maplibre\/mlnshape","title":"MLNShape","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","kind":"symbol","abstract":[{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShape","isActive":true,"type":"reference"},{"type":"text","text":" is an abstract class that represents a shape or annotation. Shapes"},{"type":"text","text":" "},{"type":"text","text":"constitute the content of a map â€” not only the overlays atop the map, but also"},{"text":" ","type":"text"},{"type":"text","text":"the content that forms the base map."}]}}}