{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"@property"},{"text":" (","kind":"text"},{"kind":"keyword","text":"nonatomic"},{"text":") ","kind":"text"},{"text":"NSExpression","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSExpression"},{"text":" * ","kind":"text"},{"kind":"identifier","text":"lineMiterLimit"},{"text":";","kind":"text"}],"languages":["occ"],"platforms":["iOS"]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The default value of this property is an expression that evaluates to the float","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"2"},{"text":". Set this property to ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" to reset it to the default value."}]},{"inlineContent":[{"text":"This property is only applied to the style if ","type":"text"},{"type":"codeVoice","code":"lineJoin"},{"type":"text","text":" is set to an"},{"text":" ","type":"text"},{"type":"text","text":"expression that evaluates to "},{"code":"miter","type":"codeVoice"},{"type":"text","text":". Otherwise, it is ignored."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"You can set this property to an expression containing any of the following:","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Constant numeric values","type":"text"},{"text":" ","type":"text"},{"text":"Predefined functions, including mathematical and string operators","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Conditional expressions"},{"type":"text","text":" "},{"type":"text","text":"Variable assignments and references to assigned variables"},{"type":"text","text":" "},{"text":"Interpolation and step functions applied to the ","type":"text"},{"type":"codeVoice","code":"$zoomLevel"},{"type":"text","text":" variable"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This property does not support applying interpolation or step functions to"},{"text":" ","type":"text"},{"type":"text","text":"feature attributes."}]}]}],"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineMiterLimit","interfaceLanguage":"occ"},"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer"]]},"kind":"symbol","sections":[],"abstract":[{"type":"text","text":"Used to automatically convert miter joins to bevel joins for sharp angles."}],"metadata":{"roleHeading":"Instance Property","symbolKind":"property","externalID":"c:objc(cs)MLNLineStyleLayer(py)lineMiterLimit","title":"lineMiterLimit","modules":[{"name":"MapLibre"}],"role":"symbol","fragments":[{"text":"lineMiterLimit","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"lineMiterLimit"}]},"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnlinestylelayer\/linemiterlimit"]}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer":{"title":"MLNLineStyleLayer","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer","kind":"symbol","url":"\/documentation\/maplibre\/mlnlinestylelayer","role":"symbol","type":"topic","abstract":[{"text":"An ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer"},{"type":"text","text":" is a style layer that renders one or more stroked"},{"text":" ","type":"text"},{"text":"polylines on the map.","type":"text"}],"fragments":[{"text":"MLNLineStyleLayer","kind":"identifier"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer/lineMiterLimit":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineMiterLimit","fragments":[{"text":"lineMiterLimit","kind":"identifier"}],"url":"\/documentation\/maplibre\/mlnlinestylelayer\/linemiterlimit","kind":"symbol","type":"topic","abstract":[{"text":"Used to automatically convert miter joins to bevel joins for sharp angles.","type":"text"}],"title":"lineMiterLimit","role":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre":{"kind":"symbol","url":"\/documentation\/maplibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","type":"topic","title":"MapLibre","role":"collection","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}]}}}