{"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"text":"@property","kind":"keyword"},{"text":" (","kind":"text"},{"text":"nonatomic","kind":"keyword"},{"kind":"text","text":") "},{"preciseIdentifier":"c:objc(cs)NSExpression","kind":"typeIdentifier","text":"NSExpression"},{"text":" * ","kind":"text"},{"kind":"identifier","text":"lineOpacity"},{"text":";","kind":"text"}],"languages":["occ"]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"inlineContent":[{"type":"text","text":"The default value of this property is an expression that evaluates to the float"},{"type":"text","text":" "},{"type":"codeVoice","code":"1"},{"text":". Set this property to ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":" to reset it to the default value."}],"type":"paragraph"},{"inlineContent":[{"text":"You can set this property to an expression containing any of the following:","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Constant numeric values between 0 and 1 inclusive","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Predefined functions, including mathematical and string operators"},{"type":"text","text":" "},{"text":"Conditional expressions","type":"text"},{"type":"text","text":" "},{"text":"Variable assignments and references to assigned variables","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Interpolation and step functions applied to the "},{"code":"$zoomLevel","type":"codeVoice"},{"text":" variable and\/or","type":"text"},{"type":"text","text":" "},{"text":"feature attributes","type":"text"}]}]}],"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity","interfaceLanguage":"occ"},"abstract":[{"text":"The opacity at which the line will be drawn.","type":"text"}],"metadata":{"navigatorTitle":[{"kind":"identifier","text":"lineOpacity"}],"symbolKind":"property","externalID":"c:objc(cs)MLNLineStyleLayer(py)lineOpacity","role":"symbol","title":"lineOpacity","modules":[{"name":"MapLibre"}],"roleHeading":"Instance Property","fragments":[{"text":"lineOpacity","kind":"identifier"}]},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer"]]},"variants":[{"paths":["\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity"],"traits":[{"interfaceLanguage":"occ"}]}],"references":{"doc://org.swift.MyProject/documentation/MapLibre":{"abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"type":"topic","kind":"symbol","title":"MapLibre","role":"collection","url":"\/documentation\/maplibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre"},"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer/lineOpacity":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity","role":"symbol","url":"\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity","type":"topic","kind":"symbol","fragments":[{"kind":"identifier","text":"lineOpacity"}],"title":"lineOpacity","abstract":[{"type":"text","text":"The opacity at which the line will be drawn."}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer":{"role":"symbol","abstract":[{"text":"An ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer","type":"reference"},{"text":" is a style layer that renders one or more stroked","type":"text"},{"type":"text","text":" "},{"type":"text","text":"polylines on the map."}],"title":"MLNLineStyleLayer","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer","kind":"symbol","type":"topic","fragments":[{"text":"MLNLineStyleLayer","kind":"identifier"}],"url":"\/documentation\/maplibre\/mlnlinestylelayer"}}}