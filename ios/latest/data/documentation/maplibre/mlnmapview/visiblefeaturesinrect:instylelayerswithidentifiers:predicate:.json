{"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"]]},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnmapview\/visiblefeaturesinrect:instylelayerswithidentifiers:predicate:"]}],"metadata":{"roleHeading":"Instance Method","symbolKind":"method","role":"symbol","externalID":"c:objc(cs)MLNMapView(im)visibleFeaturesInRect:inStyleLayersWithIdentifiers:predicate:","title":"visibleFeaturesInRect:inStyleLayersWithIdentifiers:predicate:","modules":[{"name":"MapLibre"}],"fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"visibleFeaturesInRect:inStyleLayersWithIdentifiers:predicate:"}],"navigatorTitle":[{"kind":"identifier","text":"visibleFeaturesInRect:inStyleLayersWithIdentifiers:predicate:"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"languages":["occ"],"tokens":[{"kind":"text","text":"- ("},{"kind":"typeIdentifier","text":"NSArray<id<MLNFeature>>","preciseIdentifier":"c:Q$objc(cs)NSArray"},{"text":" *) ","kind":"text"},{"kind":"identifier","text":"visibleFeaturesInRect:"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@S@CGRect","text":"CGRect"},{"text":") ","kind":"text"},{"text":"rect","kind":"internalParam"},{"kind":"text","text":" "},{"kind":"identifier","text":"inStyleLayersWithIdentifiers:"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"c:Q$objc(cs)NSSet","text":"NSSet<NSString *>"},{"kind":"text","text":" *) "},{"kind":"internalParam","text":"styleLayerIdentifiers"},{"text":" ","kind":"text"},{"kind":"identifier","text":"predicate:"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:objc(cs)NSPredicate","text":"NSPredicate","kind":"typeIdentifier"},{"text":" *) ","kind":"text"},{"kind":"internalParam","text":"predicate"},{"text":";","kind":"text"}]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A rectangle expressed in the map view’s coordinate system."}],"type":"paragraph"}],"name":"rect"},{"content":[{"inlineContent":[{"text":"A set of strings that correspond to the names of","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"layers defined in the current style. Only the features contained in these"},{"text":" ","type":"text"},{"text":"layers are included in the returned array.","type":"text"}],"type":"paragraph"}],"name":"styleLayerIdentifiers"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A predicate to filter the returned features."}]}],"name":"predicate"}]},{"content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"An array of objects conforming to the ","type":"text"},{"type":"codeVoice","code":"MLNFeature"},{"type":"text","text":" protocol that"},{"type":"text","text":" "},{"text":"represent features in the sources used by the current style.","type":"text"}]}],"kind":"content"},{"kind":"content","content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Each object in the returned array represents a feature rendered by the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"current style and provides access to attributes specified by the relevant map"},{"type":"text","text":" "},{"type":"text","text":"content sources. The returned array includes features loaded by"},{"type":"text","text":" "},{"code":"MLNShapeSource","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"MLNVectorTileSource","type":"codeVoice"},{"text":" objects but does not include","type":"text"},{"type":"text","text":" "},{"text":"anything from ","type":"text"},{"type":"codeVoice","code":"MLNRasterTileSource"},{"text":" objects, or from video or canvas sources,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"which are unsupported by this SDK."}]},{"type":"paragraph","inlineContent":[{"text":"The returned features are drawn by a style layer in the current style. For","type":"text"},{"type":"text","text":" "},{"type":"text","text":"example, suppose the current style uses a particular source,"},{"text":" ","type":"text"},{"type":"text","text":"but none of the specified style layers includes features that have the "},{"type":"codeVoice","code":"maki"},{"type":"text","text":" "},{"text":"property set to ","type":"text"},{"type":"codeVoice","code":"bus"},{"type":"text","text":". If you pass a rectangle containing the location of a bus"},{"text":" ","type":"text"},{"type":"text","text":"stop into this method, the bus stop feature does not appear in the resulting"},{"type":"text","text":" "},{"type":"text","text":"array. On the other hand, if the style does include bus stops, an "},{"type":"codeVoice","code":"MLNFeature"},{"type":"text","text":" "},{"text":"object representing that bus stop is returned and its ","type":"text"},{"code":"featureAttributes","type":"codeVoice"},{"text":" ","type":"text"},{"text":"dictionary has the ","type":"text"},{"type":"codeVoice","code":"maki"},{"type":"text","text":" key set to "},{"code":"bus","type":"codeVoice"},{"text":" (along with other attributes). The","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"dictionary contains only the attributes provided by the tile source; it does"},{"type":"text","text":" "},{"type":"text","text":"not include computed attribute values or rules about how the feature is"},{"type":"text","text":" "},{"type":"text","text":"rendered by the current style."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The returned array is sorted by z-order, starting with the topmost rendered"},{"text":" ","type":"text"},{"type":"text","text":"feature and ending with the bottommost rendered feature. A feature that is"},{"type":"text","text":" "},{"type":"text","text":"rendered multiple times due to wrapping across the antimeridian at low zoom"},{"text":" ","type":"text"},{"text":"levels is included only once, subject to the caveat that follows.","type":"text"}]},{"inlineContent":[{"type":"text","text":"Features come from tiled vector data or GeoJSON data that is converted to tiles"},{"text":" ","type":"text"},{"text":"internally, so feature geometries are clipped at tile boundaries and features","type":"text"},{"text":" ","type":"text"},{"text":"may appear duplicated across tiles. For example, suppose the specified","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"rectangle intersects with a road that spans the screen. The resulting array"},{"type":"text","text":" "},{"type":"text","text":"includes those parts of the road that lie within the map tiles covering the"},{"text":" ","type":"text"},{"type":"text","text":"specified rectangle, even if the road extends into other tiles. The portion of"},{"type":"text","text":" "},{"type":"text","text":"the road within each map tile is included individually."}],"type":"paragraph"},{"inlineContent":[{"text":"To find out the layer names in a particular style, view the style in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Maputnik"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Only visible features are returned. To obtain features regardless of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"visibility, use the"},{"text":" ","type":"text"},{"code":"-[MLNVectorTileSource featuresInSourceLayersWithIdentifiers:predicate:]","type":"codeVoice"},{"text":" and","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"-[MLNShapeSource featuresMatchingPredicate:]"},{"type":"text","text":" methods on the relevant sources."}]},{"type":"paragraph","inlineContent":[{"text":"versions of the same style. Applications that use this API must first set the","type":"text"},{"type":"text","text":" "},{"text":"style URL to an explicitly versioned style using a convenience method like","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"+[MLNStyle outdoorsStyleURLWithVersion:]"},{"type":"text","text":", "},{"type":"codeVoice","code":"MLNMapView"},{"type":"text","text":"’s “Style URL”"},{"type":"text","text":" "},{"text":"inspectable in Interface Builder, or a manually constructed ","type":"text"},{"code":"NSURL","type":"codeVoice"},{"text":". This","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"approach also avoids layer identifer name changes that will occur in the"},{"text":" ","type":"text"},{"text":"default style’s layers over time.","type":"text"}]},{"type":"codeListing","syntax":null,"code":["versions of the same style. Applications that use this API must first set","the style URL to an explicitly versioned style using a convenience method","like `+[MLNStyle outdoorsStyleURLWithVersion:]`, `MLNMapView`’s “Style URL”","inspectable in Interface Builder, or a manually constructed `NSURL`. This","approach also avoids layer identifer name changes that will occur in the","default style’s layers over time."]}]}],"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/visibleFeaturesInRect:inStyleLayersWithIdentifiers:predicate:","interfaceLanguage":"occ"},"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"Returns an array of rendered map features that intersect with the given"},{"text":" ","type":"text"},{"type":"text","text":"rectangle, restricted to the given style layers and filtered by the given"},{"type":"text","text":" "},{"text":"predicate.","type":"text"}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView/visibleFeaturesInRect:inStyleLayersWithIdentifiers:predicate:":{"title":"visibleFeaturesInRect:inStyleLayersWithIdentifiers:predicate:","fragments":[{"kind":"text","text":"- "},{"text":"visibleFeaturesInRect:inStyleLayersWithIdentifiers:predicate:","kind":"identifier"}],"abstract":[{"type":"text","text":"Returns an array of rendered map features that intersect with the given"},{"text":" ","type":"text"},{"text":"rectangle, restricted to the given style layers and filtered by the given","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"predicate."}],"type":"topic","navigatorTitle":[{"text":"visibleFeaturesInRect:inStyleLayersWithIdentifiers:predicate:","kind":"identifier"}],"kind":"symbol","role":"symbol","url":"\/documentation\/maplibre\/mlnmapview\/visiblefeaturesinrect:instylelayerswithidentifiers:predicate:","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/visibleFeaturesInRect:inStyleLayersWithIdentifiers:predicate:"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"url":"\/documentation\/maplibre\/mlnmapview","type":"topic","abstract":[{"text":"An interactive, customizable map view with an interface similar to the one","type":"text"},{"text":" ","type":"text"},{"text":"provided by Apple’s MapKit.","type":"text"}],"fragments":[{"text":"MLNMapView","kind":"identifier"}],"title":"MLNMapView","kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","role":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre":{"url":"\/documentation\/maplibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","kind":"symbol","role":"collection","title":"MapLibre","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"type":"topic"}}}