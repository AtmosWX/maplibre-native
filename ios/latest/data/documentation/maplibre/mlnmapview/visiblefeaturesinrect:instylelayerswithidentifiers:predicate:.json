{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"- (","kind":"text"},{"kind":"typeIdentifier","text":"NSArray<id<MLNFeature>>","preciseIdentifier":"c:Q$objc(cs)NSArray"},{"text":" *) ","kind":"text"},{"text":"visibleFeaturesInRect:","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@S@CGRect","text":"CGRect"},{"kind":"text","text":") "},{"text":"rect","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"inStyleLayersWithIdentifiers:","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"NSSet<NSString *>","preciseIdentifier":"c:Q$objc(cs)NSSet"},{"text":" *) ","kind":"text"},{"text":"styleLayerIdentifiers","kind":"internalParam"},{"kind":"text","text":" "},{"kind":"identifier","text":"predicate:"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"NSPredicate","preciseIdentifier":"c:objc(cs)NSPredicate"},{"kind":"text","text":" *) "},{"text":"predicate","kind":"internalParam"},{"kind":"text","text":";"}],"platforms":["iOS"],"languages":["occ"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A rectangle expressed in the map view’s coordinate system."}]}],"name":"rect"},{"content":[{"type":"paragraph","inlineContent":[{"text":"A set of strings that correspond to the names of","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"layers defined in the current style. Only the features contained in these"},{"text":" ","type":"text"},{"type":"text","text":"layers are included in the returned array."}]}],"name":"styleLayerIdentifiers"},{"name":"predicate","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A predicate to filter the returned features."}]}]}],"kind":"parameters"},{"content":[{"anchor":"return-value","level":2,"text":"Return Value","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An array of objects conforming to the "},{"code":"MLNFeature","type":"codeVoice"},{"text":" protocol that","type":"text"},{"text":" ","type":"text"},{"text":"represent features in the sources used by the current style.","type":"text"}]}],"kind":"content"},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"inlineContent":[{"text":"Each object in the returned array represents a feature rendered by the","type":"text"},{"type":"text","text":" "},{"text":"current style and provides access to attributes specified by the relevant map","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"content sources. The returned array includes features loaded by"},{"text":" ","type":"text"},{"type":"codeVoice","code":"MLNShapeSource"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"MLNVectorTileSource"},{"type":"text","text":" objects but does not include"},{"type":"text","text":" "},{"text":"anything from ","type":"text"},{"code":"MLNRasterTileSource","type":"codeVoice"},{"text":" objects, or from video or canvas sources,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"which are unsupported by this SDK."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The returned features are drawn by a style layer in the current style. For"},{"type":"text","text":" "},{"type":"text","text":"example, suppose the current style uses a particular source,"},{"text":" ","type":"text"},{"type":"text","text":"but none of the specified style layers includes features that have the "},{"type":"codeVoice","code":"maki"},{"type":"text","text":" "},{"text":"property set to ","type":"text"},{"code":"bus","type":"codeVoice"},{"text":". If you pass a rectangle containing the location of a bus","type":"text"},{"text":" ","type":"text"},{"text":"stop into this method, the bus stop feature does not appear in the resulting","type":"text"},{"type":"text","text":" "},{"type":"text","text":"array. On the other hand, if the style does include bus stops, an "},{"type":"codeVoice","code":"MLNFeature"},{"text":" ","type":"text"},{"text":"object representing that bus stop is returned and its ","type":"text"},{"type":"codeVoice","code":"featureAttributes"},{"type":"text","text":" "},{"type":"text","text":"dictionary has the "},{"code":"maki","type":"codeVoice"},{"text":" key set to ","type":"text"},{"code":"bus","type":"codeVoice"},{"text":" (along with other attributes). The","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"dictionary contains only the attributes provided by the tile source; it does"},{"text":" ","type":"text"},{"type":"text","text":"not include computed attribute values or rules about how the feature is"},{"text":" ","type":"text"},{"type":"text","text":"rendered by the current style."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The returned array is sorted by z-order, starting with the topmost rendered"},{"type":"text","text":" "},{"type":"text","text":"feature and ending with the bottommost rendered feature. A feature that is"},{"type":"text","text":" "},{"text":"rendered multiple times due to wrapping across the antimeridian at low zoom","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"levels is included only once, subject to the caveat that follows."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Features come from tiled vector data or GeoJSON data that is converted to tiles"},{"type":"text","text":" "},{"text":"internally, so feature geometries are clipped at tile boundaries and features","type":"text"},{"type":"text","text":" "},{"type":"text","text":"may appear duplicated across tiles. For example, suppose the specified"},{"text":" ","type":"text"},{"text":"rectangle intersects with a road that spans the screen. The resulting array","type":"text"},{"type":"text","text":" "},{"text":"includes those parts of the road that lie within the map tiles covering the","type":"text"},{"type":"text","text":" "},{"text":"specified rectangle, even if the road extends into other tiles. The portion of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the road within each map tile is included individually."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To find out the layer names in a particular style, view the style in"},{"type":"text","text":" "},{"type":"text","text":"Maputnik"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"text":"Only visible features are returned. To obtain features regardless of","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"visibility, use the"},{"type":"text","text":" "},{"type":"codeVoice","code":"-[MLNVectorTileSource featuresInSourceLayersWithIdentifiers:predicate:]"},{"text":" and","type":"text"},{"text":" ","type":"text"},{"code":"-[MLNShapeSource featuresMatchingPredicate:]","type":"codeVoice"},{"type":"text","text":" methods on the relevant sources."}]},{"inlineContent":[{"type":"text","text":"versions of the same style. Applications that use this API must first set the"},{"text":" ","type":"text"},{"type":"text","text":"style URL to an explicitly versioned style using a convenience method like"},{"type":"text","text":" "},{"code":"+[MLNStyle outdoorsStyleURLWithVersion:]","type":"codeVoice"},{"type":"text","text":", "},{"code":"MLNMapView","type":"codeVoice"},{"type":"text","text":"’s “Style URL”"},{"type":"text","text":" "},{"text":"inspectable in Interface Builder, or a manually constructed ","type":"text"},{"type":"codeVoice","code":"NSURL"},{"text":". This","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"approach also avoids layer identifer name changes that will occur in the"},{"text":" ","type":"text"},{"text":"default style’s layers over time.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["versions of the same style. Applications that use this API must first set","the style URL to an explicitly versioned style using a convenience method","like `+[MLNStyle outdoorsStyleURLWithVersion:]`, `MLNMapView`’s “Style URL”","inspectable in Interface Builder, or a manually constructed `NSURL`. This","approach also avoids layer identifer name changes that will occur in the","default style’s layers over time."]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/documentation\/maplibre\/mlnmapview\/visiblefeaturesinrect:instylelayerswithidentifiers:predicate:"],"traits":[{"interfaceLanguage":"occ"}]}],"kind":"symbol","metadata":{"modules":[{"name":"MapLibre"}],"roleHeading":"Instance Method","role":"symbol","title":"visibleFeaturesInRect:inStyleLayersWithIdentifiers:predicate:","externalID":"c:objc(cs)MLNMapView(im)visibleFeaturesInRect:inStyleLayersWithIdentifiers:predicate:","fragments":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"visibleFeaturesInRect:inStyleLayersWithIdentifiers:predicate:"}],"navigatorTitle":[{"kind":"identifier","text":"visibleFeaturesInRect:inStyleLayersWithIdentifiers:predicate:"}],"symbolKind":"method"},"sections":[],"abstract":[{"type":"text","text":"Returns an array of rendered map features that intersect with the given"},{"text":" ","type":"text"},{"type":"text","text":"rectangle, restricted to the given style layers and filtered by the given"},{"type":"text","text":" "},{"text":"predicate.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"]]},"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/visibleFeaturesInRect:inStyleLayersWithIdentifiers:predicate:","interfaceLanguage":"occ"},"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView/visibleFeaturesInRect:inStyleLayersWithIdentifiers:predicate:":{"kind":"symbol","fragments":[{"text":"- ","kind":"text"},{"text":"visibleFeaturesInRect:inStyleLayersWithIdentifiers:predicate:","kind":"identifier"}],"title":"visibleFeaturesInRect:inStyleLayersWithIdentifiers:predicate:","navigatorTitle":[{"text":"visibleFeaturesInRect:inStyleLayersWithIdentifiers:predicate:","kind":"identifier"}],"url":"\/documentation\/maplibre\/mlnmapview\/visiblefeaturesinrect:instylelayerswithidentifiers:predicate:","abstract":[{"type":"text","text":"Returns an array of rendered map features that intersect with the given"},{"text":" ","type":"text"},{"type":"text","text":"rectangle, restricted to the given style layers and filtered by the given"},{"text":" ","type":"text"},{"text":"predicate.","type":"text"}],"role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/visibleFeaturesInRect:inStyleLayersWithIdentifiers:predicate:","type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre":{"type":"topic","url":"\/documentation\/maplibre","role":"collection","kind":"symbol","title":"MapLibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"role":"symbol","abstract":[{"type":"text","text":"An interactive, customizable map view with an interface similar to the one"},{"type":"text","text":" "},{"text":"provided by Apple’s MapKit.","type":"text"}],"title":"MLNMapView","type":"topic","fragments":[{"text":"MLNMapView","kind":"identifier"}],"url":"\/documentation\/maplibre\/mlnmapview","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","kind":"symbol"}}}