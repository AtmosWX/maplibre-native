{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"languages":["occ"],"tokens":[{"text":"- (","kind":"text"},{"preciseIdentifier":"c:Q$objc(cs)NSArray","text":"NSArray<id<MLNFeature>>","kind":"typeIdentifier"},{"text":" *) ","kind":"text"},{"kind":"identifier","text":"visibleFeaturesInRect:"},{"text":"(","kind":"text"},{"text":"CGRect","kind":"typeIdentifier","preciseIdentifier":"c:@S@CGRect"},{"text":") ","kind":"text"},{"text":"rect","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"inStyleLayersWithIdentifiers:","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:Q$objc(cs)NSSet","text":"NSSet<NSString *>","kind":"typeIdentifier"},{"kind":"text","text":" *) "},{"text":"styleLayerIdentifiers","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"predicate:","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"c:objc(cs)NSPredicate","text":"NSPredicate","kind":"typeIdentifier"},{"text":" *) ","kind":"text"},{"kind":"internalParam","text":"predicate"},{"text":";","kind":"text"}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A rectangle expressed in the map view’s coordinate system."}]}],"name":"rect"},{"content":[{"inlineContent":[{"type":"text","text":"A set of strings that correspond to the names of"},{"text":" ","type":"text"},{"text":"layers defined in the current style. Only the features contained in these","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"layers are included in the returned array."}],"type":"paragraph"}],"name":"styleLayerIdentifiers"},{"content":[{"type":"paragraph","inlineContent":[{"text":"A predicate to filter the returned features.","type":"text"}]}],"name":"predicate"}]},{"kind":"content","content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"inlineContent":[{"text":"An array of objects conforming to the ","type":"text"},{"type":"codeVoice","code":"MLNFeature"},{"text":" protocol that","type":"text"},{"type":"text","text":" "},{"type":"text","text":"represent features in the sources used by the current style."}],"type":"paragraph"}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"Each object in the returned array represents a feature rendered by the","type":"text"},{"type":"text","text":" "},{"text":"current style and provides access to attributes specified by the relevant map","type":"text"},{"type":"text","text":" "},{"type":"text","text":"content sources. The returned array includes features loaded by"},{"type":"text","text":" "},{"type":"codeVoice","code":"MLNShapeSource"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"MLNVectorTileSource"},{"text":" objects but does not include","type":"text"},{"type":"text","text":" "},{"text":"anything from ","type":"text"},{"type":"codeVoice","code":"MLNRasterTileSource"},{"text":" objects, or from video or canvas sources,","type":"text"},{"type":"text","text":" "},{"text":"which are unsupported by this SDK.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The returned features are drawn by a style layer in the current style. For"},{"text":" ","type":"text"},{"text":"example, suppose the current style uses a particular source,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"but none of the specified style layers includes features that have the "},{"type":"codeVoice","code":"maki"},{"text":" ","type":"text"},{"type":"text","text":"property set to "},{"code":"bus","type":"codeVoice"},{"text":". If you pass a rectangle containing the location of a bus","type":"text"},{"type":"text","text":" "},{"text":"stop into this method, the bus stop feature does not appear in the resulting","type":"text"},{"type":"text","text":" "},{"text":"array. On the other hand, if the style does include bus stops, an ","type":"text"},{"type":"codeVoice","code":"MLNFeature"},{"type":"text","text":" "},{"type":"text","text":"object representing that bus stop is returned and its "},{"type":"codeVoice","code":"featureAttributes"},{"text":" ","type":"text"},{"type":"text","text":"dictionary has the "},{"type":"codeVoice","code":"maki"},{"type":"text","text":" key set to "},{"type":"codeVoice","code":"bus"},{"type":"text","text":" (along with other attributes). The"},{"text":" ","type":"text"},{"type":"text","text":"dictionary contains only the attributes provided by the tile source; it does"},{"text":" ","type":"text"},{"type":"text","text":"not include computed attribute values or rules about how the feature is"},{"text":" ","type":"text"},{"text":"rendered by the current style.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"The returned array is sorted by z-order, starting with the topmost rendered","type":"text"},{"type":"text","text":" "},{"text":"feature and ending with the bottommost rendered feature. A feature that is","type":"text"},{"type":"text","text":" "},{"type":"text","text":"rendered multiple times due to wrapping across the antimeridian at low zoom"},{"text":" ","type":"text"},{"type":"text","text":"levels is included only once, subject to the caveat that follows."}]},{"inlineContent":[{"type":"text","text":"Features come from tiled vector data or GeoJSON data that is converted to tiles"},{"type":"text","text":" "},{"text":"internally, so feature geometries are clipped at tile boundaries and features","type":"text"},{"type":"text","text":" "},{"type":"text","text":"may appear duplicated across tiles. For example, suppose the specified"},{"text":" ","type":"text"},{"type":"text","text":"rectangle intersects with a road that spans the screen. The resulting array"},{"type":"text","text":" "},{"text":"includes those parts of the road that lie within the map tiles covering the","type":"text"},{"type":"text","text":" "},{"text":"specified rectangle, even if the road extends into other tiles. The portion of","type":"text"},{"text":" ","type":"text"},{"text":"the road within each map tile is included individually.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"To find out the layer names in a particular style, view the style in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Maputnik"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Only visible features are returned. To obtain features regardless of","type":"text"},{"type":"text","text":" "},{"text":"visibility, use the","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"-[MLNVectorTileSource featuresInSourceLayersWithIdentifiers:predicate:]"},{"type":"text","text":" and"},{"text":" ","type":"text"},{"code":"-[MLNShapeSource featuresMatchingPredicate:]","type":"codeVoice"},{"type":"text","text":" methods on the relevant sources."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"versions of the same style. Applications that use this API must first set the"},{"type":"text","text":" "},{"type":"text","text":"style URL to an explicitly versioned style using a convenience method like"},{"text":" ","type":"text"},{"type":"codeVoice","code":"+[MLNStyle outdoorsStyleURLWithVersion:]"},{"type":"text","text":", "},{"type":"codeVoice","code":"MLNMapView"},{"type":"text","text":"’s “Style URL”"},{"text":" ","type":"text"},{"type":"text","text":"inspectable in Interface Builder, or a manually constructed "},{"code":"NSURL","type":"codeVoice"},{"type":"text","text":". This"},{"text":" ","type":"text"},{"text":"approach also avoids layer identifer name changes that will occur in the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"default style’s layers over time."}]},{"type":"codeListing","code":["versions of the same style. Applications that use this API must first set","the style URL to an explicitly versioned style using a convenience method","like `+[MLNStyle outdoorsStyleURLWithVersion:]`, `MLNMapView`’s “Style URL”","inspectable in Interface Builder, or a manually constructed `NSURL`. This","approach also avoids layer identifer name changes that will occur in the","default style’s layers over time."],"syntax":null}]}],"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/visibleFeaturesInRect:inStyleLayersWithIdentifiers:predicate:"},"sections":[],"kind":"symbol","abstract":[{"type":"text","text":"Returns an array of rendered map features that intersect with the given"},{"type":"text","text":" "},{"type":"text","text":"rectangle, restricted to the given style layers and filtered by the given"},{"type":"text","text":" "},{"type":"text","text":"predicate."}],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView"]]},"metadata":{"title":"visibleFeaturesInRect:inStyleLayersWithIdentifiers:predicate:","navigatorTitle":[{"kind":"identifier","text":"visibleFeaturesInRect:inStyleLayersWithIdentifiers:predicate:"}],"role":"symbol","modules":[{"name":"MapLibre"}],"fragments":[{"text":"- ","kind":"text"},{"text":"visibleFeaturesInRect:inStyleLayersWithIdentifiers:predicate:","kind":"identifier"}],"symbolKind":"method","externalID":"c:objc(cs)MLNMapView(im)visibleFeaturesInRect:inStyleLayersWithIdentifiers:predicate:","roleHeading":"Instance Method"},"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnmapview\/visiblefeaturesinrect:instylelayerswithidentifiers:predicate:"]}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView/visibleFeaturesInRect:inStyleLayersWithIdentifiers:predicate:":{"title":"visibleFeaturesInRect:inStyleLayersWithIdentifiers:predicate:","abstract":[{"text":"Returns an array of rendered map features that intersect with the given","type":"text"},{"text":" ","type":"text"},{"text":"rectangle, restricted to the given style layers and filtered by the given","type":"text"},{"type":"text","text":" "},{"text":"predicate.","type":"text"}],"role":"symbol","url":"\/documentation\/maplibre\/mlnmapview\/visiblefeaturesinrect:instylelayerswithidentifiers:predicate:","fragments":[{"kind":"text","text":"- "},{"text":"visibleFeaturesInRect:inStyleLayersWithIdentifiers:predicate:","kind":"identifier"}],"navigatorTitle":[{"text":"visibleFeaturesInRect:inStyleLayersWithIdentifiers:predicate:","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView\/visibleFeaturesInRect:inStyleLayersWithIdentifiers:predicate:","kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre":{"url":"\/documentation\/maplibre","type":"topic","title":"MapLibre","role":"collection","kind":"symbol","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre"},"doc://org.swift.MyProject/documentation/MapLibre/MLNMapView":{"title":"MLNMapView","abstract":[{"text":"An interactive, customizable map view with an interface similar to the one","type":"text"},{"type":"text","text":" "},{"type":"text","text":"provided by Apple’s MapKit."}],"role":"symbol","fragments":[{"kind":"identifier","text":"MLNMapView"}],"kind":"symbol","url":"\/documentation\/maplibre\/mlnmapview","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNMapView","type":"topic"}}}