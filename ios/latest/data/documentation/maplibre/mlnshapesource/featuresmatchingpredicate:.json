{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeSource"]]},"abstract":[{"type":"text","text":"Returns an array of map features for this source, filtered by the given"},{"text":" ","type":"text"},{"type":"text","text":"predicate."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeSource\/featuresMatchingPredicate:","interfaceLanguage":"occ"},"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnshapesource\/featuresmatchingpredicate:"]}],"metadata":{"title":"featuresMatchingPredicate:","externalID":"c:objc(cs)MLNShapeSource(im)featuresMatchingPredicate:","modules":[{"name":"MapLibre"}],"roleHeading":"Instance Method","navigatorTitle":[{"text":"featuresMatchingPredicate:","kind":"identifier"}],"role":"symbol","symbolKind":"method","fragments":[{"kind":"text","text":"- "},{"kind":"identifier","text":"featuresMatchingPredicate:"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"kind":"text","text":"- ("},{"text":"NSArray<id<MLNFeature>>","preciseIdentifier":"c:Q$objc(cs)NSArray","kind":"typeIdentifier"},{"text":" *) ","kind":"text"},{"text":"featuresMatchingPredicate:","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"NSPredicate","preciseIdentifier":"c:objc(cs)NSPredicate"},{"text":" *) ","kind":"text"},{"kind":"internalParam","text":"predicate"},{"text":";","kind":"text"}],"languages":["occ"]}]},{"parameters":[{"name":"predicate","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A predicate to filter the returned features. Use "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" to"},{"text":" ","type":"text"},{"type":"text","text":"include all features in the source."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"return-value","type":"heading","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"An array of objects conforming to the "},{"type":"codeVoice","code":"MLNFeature"},{"type":"text","text":" protocol that"},{"type":"text","text":" "},{"type":"text","text":"represent features in the source that match the predicate."}]}]},{"content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"inlineContent":[{"type":"text","text":"Each object in the returned array represents a feature for the current style"},{"text":" ","type":"text"},{"type":"text","text":"and provides access to attributes specified via the "},{"code":"shape","type":"codeVoice"},{"text":" property.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Features come from tiled GeoJSON data that is converted to tiles internally,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"so feature geometries are clipped at tile boundaries and features"},{"type":"text","text":" "},{"text":"may appear duplicated across tiles. For example, suppose this source contains a","type":"text"},{"text":" ","type":"text"},{"text":"long polyline representing a road. The resulting array includes those parts of","type":"text"},{"type":"text","text":" "},{"text":"the road that lie within the map tiles that the source has loaded, even if the","type":"text"},{"text":" ","type":"text"},{"text":"road extends into other tiles. The portion of the road within each map tile is","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"included individually."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Returned features may not necessarily be visible to the user at the time they"},{"type":"text","text":" "},{"text":"are loaded: the style may lack a layer that draws the features in question. To","type":"text"},{"text":" ","type":"text"},{"text":"obtain only ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"visible"}]},{"type":"text","text":" features, use the"},{"text":" ","type":"text"},{"type":"codeVoice","code":"-[MLNMapView visibleFeaturesAtPoint:inStyleLayersWithIdentifiers:predicate:]"},{"type":"text","text":" "},{"text":"or","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"-[MLNMapView visibleFeaturesInRect:inStyleLayersWithIdentifiers:predicate:]"},{"type":"text","text":" "},{"text":"method.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNShapeSource":{"url":"\/documentation\/maplibre\/mlnshapesource","abstract":[{"code":"MLNShapeSource","type":"codeVoice"},{"type":"text","text":" is a map content source that supplies vector shapes to be"},{"text":" ","type":"text"},{"text":"shown on the map. The shapes may be instances of ","type":"text"},{"type":"codeVoice","code":"MLNShape"},{"type":"text","text":" or "},{"code":"MLNFeature","type":"codeVoice"},{"type":"text","text":","},{"text":" ","type":"text"},{"text":"or they may be defined by local or external","type":"text"},{"type":"text","text":" "},{"text":"GeoJSON","type":"text"},{"type":"text","text":" code. A shape source is added to an"},{"text":" ","type":"text"},{"type":"codeVoice","code":"MLNStyle"},{"text":" object along with an ","type":"text"},{"type":"codeVoice","code":"MLNVectorStyleLayer"},{"type":"text","text":" object. The vector style"},{"type":"text","text":" "},{"text":"layer defines the appearance of any content supplied by the shape source. You","type":"text"},{"type":"text","text":" "},{"type":"text","text":"can update a shape source by setting its "},{"type":"codeVoice","code":"shape"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"URL"},{"text":" property.","type":"text"}],"type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"MLNShapeSource","kind":"identifier"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeSource","title":"MLNShapeSource"},"doc://org.swift.MyProject/documentation/MapLibre":{"type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","url":"\/documentation\/maplibre","title":"MapLibre","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNShapeSource/featuresMatchingPredicate:":{"title":"featuresMatchingPredicate:","fragments":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"featuresMatchingPredicate:"}],"type":"topic","abstract":[{"type":"text","text":"Returns an array of map features for this source, filtered by the given"},{"type":"text","text":" "},{"text":"predicate.","type":"text"}],"navigatorTitle":[{"text":"featuresMatchingPredicate:","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeSource\/featuresMatchingPredicate:","kind":"symbol","url":"\/documentation\/maplibre\/mlnshapesource\/featuresmatchingpredicate:"}}}