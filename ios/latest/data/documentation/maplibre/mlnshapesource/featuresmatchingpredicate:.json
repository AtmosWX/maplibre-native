{"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeSource"]]},"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"- (","kind":"text"},{"text":"NSArray<id<MLNFeature>>","kind":"typeIdentifier","preciseIdentifier":"c:Q$objc(cs)NSArray"},{"kind":"text","text":" *) "},{"text":"featuresMatchingPredicate:","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"NSPredicate","preciseIdentifier":"c:objc(cs)NSPredicate"},{"text":" *) ","kind":"text"},{"text":"predicate","kind":"internalParam"},{"text":";","kind":"text"}],"languages":["occ"],"platforms":["iOS"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"A predicate to filter the returned features. Use ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" to"},{"type":"text","text":" "},{"text":"include all features in the source.","type":"text"}],"type":"paragraph"}],"name":"predicate"}]},{"kind":"content","content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"inlineContent":[{"type":"text","text":"An array of objects conforming to the "},{"code":"MLNFeature","type":"codeVoice"},{"type":"text","text":" protocol that"},{"text":" ","type":"text"},{"text":"represent features in the source that match the predicate.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"inlineContent":[{"text":"Each object in the returned array represents a feature for the current style","type":"text"},{"text":" ","type":"text"},{"text":"and provides access to attributes specified via the ","type":"text"},{"type":"codeVoice","code":"shape"},{"text":" property.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Features come from tiled GeoJSON data that is converted to tiles internally,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"so feature geometries are clipped at tile boundaries and features"},{"type":"text","text":" "},{"text":"may appear duplicated across tiles. For example, suppose this source contains a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"long polyline representing a road. The resulting array includes those parts of"},{"text":" ","type":"text"},{"type":"text","text":"the road that lie within the map tiles that the source has loaded, even if the"},{"type":"text","text":" "},{"text":"road extends into other tiles. The portion of the road within each map tile is","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"included individually."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Returned features may not necessarily be visible to the user at the time they"},{"text":" ","type":"text"},{"type":"text","text":"are loaded: the style may lack a layer that draws the features in question. To"},{"type":"text","text":" "},{"type":"text","text":"obtain only "},{"inlineContent":[{"text":"visible","type":"text"}],"type":"emphasis"},{"type":"text","text":" features, use the"},{"type":"text","text":" "},{"code":"-[MLNMapView visibleFeaturesAtPoint:inStyleLayersWithIdentifiers:predicate:]","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"or"},{"text":" ","type":"text"},{"type":"codeVoice","code":"-[MLNMapView visibleFeaturesInRect:inStyleLayersWithIdentifiers:predicate:]"},{"type":"text","text":" "},{"text":"method.","type":"text"}]}]}],"metadata":{"modules":[{"name":"MapLibre"}],"externalID":"c:objc(cs)MLNShapeSource(im)featuresMatchingPredicate:","navigatorTitle":[{"text":"featuresMatchingPredicate:","kind":"identifier"}],"fragments":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"featuresMatchingPredicate:"}],"role":"symbol","title":"featuresMatchingPredicate:","symbolKind":"method","roleHeading":"Instance Method"},"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnshapesource\/featuresmatchingpredicate:"]}],"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeSource\/featuresMatchingPredicate:"},"sections":[],"abstract":[{"type":"text","text":"Returns an array of map features for this source, filtered by the given"},{"type":"text","text":" "},{"text":"predicate.","type":"text"}],"references":{"doc://org.swift.MyProject/documentation/MapLibre":{"url":"\/documentation\/maplibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"type":"topic","role":"collection","kind":"symbol","title":"MapLibre"},"doc://org.swift.MyProject/documentation/MapLibre/MLNShapeSource":{"type":"topic","abstract":[{"type":"codeVoice","code":"MLNShapeSource"},{"text":" is a map content source that supplies vector shapes to be","type":"text"},{"type":"text","text":" "},{"type":"text","text":"shown on the map. The shapes may be instances of "},{"code":"MLNShape","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"MLNFeature","type":"codeVoice"},{"type":"text","text":","},{"type":"text","text":" "},{"text":"or they may be defined by local or external","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"GeoJSON"},{"type":"text","text":" code. A shape source is added to an"},{"type":"text","text":" "},{"type":"codeVoice","code":"MLNStyle"},{"text":" object along with an ","type":"text"},{"code":"MLNVectorStyleLayer","type":"codeVoice"},{"type":"text","text":" object. The vector style"},{"type":"text","text":" "},{"type":"text","text":"layer defines the appearance of any content supplied by the shape source. You"},{"type":"text","text":" "},{"text":"can update a shape source by setting its ","type":"text"},{"type":"codeVoice","code":"shape"},{"type":"text","text":" or "},{"type":"codeVoice","code":"URL"},{"type":"text","text":" property."}],"fragments":[{"text":"MLNShapeSource","kind":"identifier"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeSource","title":"MLNShapeSource","kind":"symbol","url":"\/documentation\/maplibre\/mlnshapesource","role":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre/MLNShapeSource/featuresMatchingPredicate:":{"navigatorTitle":[{"text":"featuresMatchingPredicate:","kind":"identifier"}],"role":"symbol","type":"topic","fragments":[{"text":"- ","kind":"text"},{"text":"featuresMatchingPredicate:","kind":"identifier"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeSource\/featuresMatchingPredicate:","title":"featuresMatchingPredicate:","kind":"symbol","url":"\/documentation\/maplibre\/mlnshapesource\/featuresmatchingpredicate:","abstract":[{"type":"text","text":"Returns an array of map features for this source, filtered by the given"},{"type":"text","text":" "},{"text":"predicate.","type":"text"}]}}}