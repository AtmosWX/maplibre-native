{"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeSource\/featuresMatchingPredicate:","interfaceLanguage":"occ"},"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"text":"- (","kind":"text"},{"preciseIdentifier":"c:Q$objc(cs)NSArray","kind":"typeIdentifier","text":"NSArray<id<MLNFeature>>"},{"text":" *) ","kind":"text"},{"text":"featuresMatchingPredicate:","kind":"identifier"},{"kind":"text","text":"("},{"text":"NSPredicate","preciseIdentifier":"c:objc(cs)NSPredicate","kind":"typeIdentifier"},{"kind":"text","text":" *) "},{"text":"predicate","kind":"internalParam"},{"kind":"text","text":";"}],"platforms":["iOS"],"languages":["occ"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"predicate","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A predicate to filter the returned features. Use "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" to"},{"type":"text","text":" "},{"type":"text","text":"include all features in the source."}]}]}]},{"content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"inlineContent":[{"type":"text","text":"An array of objects conforming to the "},{"type":"codeVoice","code":"MLNFeature"},{"text":" protocol that","type":"text"},{"type":"text","text":" "},{"type":"text","text":"represent features in the source that match the predicate."}],"type":"paragraph"}],"kind":"content"},{"content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"inlineContent":[{"text":"Each object in the returned array represents a feature for the current style","type":"text"},{"text":" ","type":"text"},{"text":"and provides access to attributes specified via the ","type":"text"},{"type":"codeVoice","code":"shape"},{"type":"text","text":" property."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Features come from tiled GeoJSON data that is converted to tiles internally,"},{"type":"text","text":" "},{"text":"so feature geometries are clipped at tile boundaries and features","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"may appear duplicated across tiles. For example, suppose this source contains a"},{"text":" ","type":"text"},{"type":"text","text":"long polyline representing a road. The resulting array includes those parts of"},{"text":" ","type":"text"},{"text":"the road that lie within the map tiles that the source has loaded, even if the","type":"text"},{"type":"text","text":" "},{"text":"road extends into other tiles. The portion of the road within each map tile is","type":"text"},{"text":" ","type":"text"},{"text":"included individually.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Returned features may not necessarily be visible to the user at the time they"},{"type":"text","text":" "},{"type":"text","text":"are loaded: the style may lack a layer that draws the features in question. To"},{"type":"text","text":" "},{"type":"text","text":"obtain only "},{"type":"emphasis","inlineContent":[{"type":"text","text":"visible"}]},{"text":" features, use the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"-[MLNMapView visibleFeaturesAtPoint:inStyleLayersWithIdentifiers:predicate:]"},{"text":" ","type":"text"},{"text":"or","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"-[MLNMapView visibleFeaturesInRect:inStyleLayersWithIdentifiers:predicate:]"},{"text":" ","type":"text"},{"text":"method.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/maplibre\/mlnshapesource\/featuresmatchingpredicate:"],"traits":[{"interfaceLanguage":"occ"}]}],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeSource"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"symbolKind":"method","fragments":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"featuresMatchingPredicate:"}],"roleHeading":"Instance Method","navigatorTitle":[{"text":"featuresMatchingPredicate:","kind":"identifier"}],"title":"featuresMatchingPredicate:","modules":[{"name":"MapLibre"}],"role":"symbol","externalID":"c:objc(cs)MLNShapeSource(im)featuresMatchingPredicate:"},"sections":[],"abstract":[{"type":"text","text":"Returns an array of map features for this source, filtered by the given"},{"text":" ","type":"text"},{"type":"text","text":"predicate."}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNShapeSource/featuresMatchingPredicate:":{"abstract":[{"text":"Returns an array of map features for this source, filtered by the given","type":"text"},{"type":"text","text":" "},{"text":"predicate.","type":"text"}],"fragments":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"featuresMatchingPredicate:"}],"url":"\/documentation\/maplibre\/mlnshapesource\/featuresmatchingpredicate:","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"featuresMatchingPredicate:"}],"title":"featuresMatchingPredicate:","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeSource\/featuresMatchingPredicate:","role":"symbol","type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre":{"abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","role":"collection","url":"\/documentation\/maplibre","title":"MapLibre","kind":"symbol","type":"topic"},"doc://org.swift.MyProject/documentation/MapLibre/MLNShapeSource":{"url":"\/documentation\/maplibre\/mlnshapesource","abstract":[{"code":"MLNShapeSource","type":"codeVoice"},{"type":"text","text":" is a map content source that supplies vector shapes to be"},{"type":"text","text":" "},{"type":"text","text":"shown on the map. The shapes may be instances of "},{"code":"MLNShape","type":"codeVoice"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"MLNFeature"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"or they may be defined by local or external"},{"type":"text","text":" "},{"type":"text","text":"GeoJSON"},{"text":" code. A shape source is added to an","type":"text"},{"text":" ","type":"text"},{"code":"MLNStyle","type":"codeVoice"},{"text":" object along with an ","type":"text"},{"type":"codeVoice","code":"MLNVectorStyleLayer"},{"type":"text","text":" object. The vector style"},{"type":"text","text":" "},{"type":"text","text":"layer defines the appearance of any content supplied by the shape source. You"},{"text":" ","type":"text"},{"text":"can update a shape source by setting its ","type":"text"},{"type":"codeVoice","code":"shape"},{"type":"text","text":" or "},{"type":"codeVoice","code":"URL"},{"type":"text","text":" property."}],"type":"topic","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeSource","role":"symbol","kind":"symbol","title":"MLNShapeSource","fragments":[{"kind":"identifier","text":"MLNShapeSource"}]}}}