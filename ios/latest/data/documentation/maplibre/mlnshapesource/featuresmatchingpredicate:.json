{"metadata":{"navigatorTitle":[{"text":"featuresMatchingPredicate:","kind":"identifier"}],"role":"symbol","modules":[{"name":"MapLibre"}],"roleHeading":"Instance Method","externalID":"c:objc(cs)MLNShapeSource(im)featuresMatchingPredicate:","title":"featuresMatchingPredicate:","symbolKind":"method","fragments":[{"kind":"text","text":"- "},{"text":"featuresMatchingPredicate:","kind":"identifier"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"text","text":"- ("},{"text":"NSArray<id<MLNFeature>>","preciseIdentifier":"c:Q$objc(cs)NSArray","kind":"typeIdentifier"},{"text":" *) ","kind":"text"},{"text":"featuresMatchingPredicate:","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSPredicate","text":"NSPredicate"},{"text":" *) ","kind":"text"},{"kind":"internalParam","text":"predicate"},{"text":";","kind":"text"}],"languages":["occ"],"platforms":["iOS"]}]},{"parameters":[{"name":"predicate","content":[{"type":"paragraph","inlineContent":[{"text":"A predicate to filter the returned features. Use ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" to","type":"text"},{"text":" ","type":"text"},{"text":"include all features in the source.","type":"text"}]}]}],"kind":"parameters"},{"content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"An array of objects conforming to the "},{"type":"codeVoice","code":"MLNFeature"},{"type":"text","text":" protocol that"},{"text":" ","type":"text"},{"type":"text","text":"represent features in the source that match the predicate."}]}],"kind":"content"},{"kind":"content","content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"Each object in the returned array represents a feature for the current style","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and provides access to attributes specified via the "},{"type":"codeVoice","code":"shape"},{"type":"text","text":" property."}]},{"inlineContent":[{"text":"Features come from tiled GeoJSON data that is converted to tiles internally,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"so feature geometries are clipped at tile boundaries and features"},{"type":"text","text":" "},{"text":"may appear duplicated across tiles. For example, suppose this source contains a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"long polyline representing a road. The resulting array includes those parts of"},{"type":"text","text":" "},{"type":"text","text":"the road that lie within the map tiles that the source has loaded, even if the"},{"type":"text","text":" "},{"text":"road extends into other tiles. The portion of the road within each map tile is","type":"text"},{"type":"text","text":" "},{"text":"included individually.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Returned features may not necessarily be visible to the user at the time they"},{"text":" ","type":"text"},{"text":"are loaded: the style may lack a layer that draws the features in question. To","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"obtain only "},{"inlineContent":[{"text":"visible","type":"text"}],"type":"emphasis"},{"type":"text","text":" features, use the"},{"type":"text","text":" "},{"code":"-[MLNMapView visibleFeaturesAtPoint:inStyleLayersWithIdentifiers:predicate:]","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"or"},{"type":"text","text":" "},{"type":"codeVoice","code":"-[MLNMapView visibleFeaturesInRect:inStyleLayersWithIdentifiers:predicate:]"},{"type":"text","text":" "},{"text":"method.","type":"text"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnshapesource\/featuresmatchingpredicate:"]}],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeSource"]]},"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"text":"Returns an array of map features for this source, filtered by the given","type":"text"},{"type":"text","text":" "},{"text":"predicate.","type":"text"}],"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeSource\/featuresMatchingPredicate:","interfaceLanguage":"occ"},"sections":[],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNShapeSource":{"type":"topic","title":"MLNShapeSource","url":"\/documentation\/maplibre\/mlnshapesource","role":"symbol","kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeSource","abstract":[{"code":"MLNShapeSource","type":"codeVoice"},{"text":" is a map content source that supplies vector shapes to be","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"shown on the map. The shapes may be instances of "},{"code":"MLNShape","type":"codeVoice"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"MLNFeature"},{"text":",","type":"text"},{"text":" ","type":"text"},{"text":"or they may be defined by local or external","type":"text"},{"type":"text","text":" "},{"text":"GeoJSON","type":"text"},{"text":" code. A shape source is added to an","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"MLNStyle"},{"text":" object along with an ","type":"text"},{"type":"codeVoice","code":"MLNVectorStyleLayer"},{"text":" object. The vector style","type":"text"},{"type":"text","text":" "},{"type":"text","text":"layer defines the appearance of any content supplied by the shape source. You"},{"text":" ","type":"text"},{"text":"can update a shape source by setting its ","type":"text"},{"code":"shape","type":"codeVoice"},{"type":"text","text":" or "},{"code":"URL","type":"codeVoice"},{"type":"text","text":" property."}],"fragments":[{"text":"MLNShapeSource","kind":"identifier"}]},"doc://org.swift.MyProject/documentation/MapLibre/MLNShapeSource/featuresMatchingPredicate:":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNShapeSource\/featuresMatchingPredicate:","title":"featuresMatchingPredicate:","type":"topic","fragments":[{"text":"- ","kind":"text"},{"text":"featuresMatchingPredicate:","kind":"identifier"}],"navigatorTitle":[{"text":"featuresMatchingPredicate:","kind":"identifier"}],"url":"\/documentation\/maplibre\/mlnshapesource\/featuresmatchingpredicate:","abstract":[{"text":"Returns an array of map features for this source, filtered by the given","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"predicate."}]},"doc://org.swift.MyProject/documentation/MapLibre":{"title":"MapLibre","type":"topic","url":"\/documentation\/maplibre","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"role":"collection","kind":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre"}}}