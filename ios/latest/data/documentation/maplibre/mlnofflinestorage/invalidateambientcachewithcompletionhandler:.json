{"abstract":[{"text":"Invalidates the ambient cache. This method checks that the tiles in the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"ambient cache match those from the server. If the local tiles do not match"},{"text":" ","type":"text"},{"text":"those on the server, they are re-downloaded.","type":"text"}],"kind":"symbol","sections":[],"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"tokens":[{"kind":"text","text":"- ("},{"kind":"typeIdentifier","text":"void","preciseIdentifier":"c:v"},{"kind":"text","text":") "},{"text":"invalidateAmbientCacheWithCompletionHandler:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"void","kind":"typeIdentifier","preciseIdentifier":"c:v"},{"text":" (^","kind":"text"},{"kind":"text","text":")("},{"preciseIdentifier":"c:objc(cs)NSError","kind":"typeIdentifier","text":"NSError"},{"kind":"text","text":" * "},{"text":"error","kind":"internalParam"},{"text":")) ","kind":"text"},{"text":"completion","kind":"internalParam"},{"text":";","kind":"text"}],"languages":["occ"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"completion","content":[{"inlineContent":[{"text":"The completion handler to call once the ambient cache has","type":"text"},{"text":" ","type":"text"},{"text":"been revalidated. This handler is executed asynchronously on the main queue.","type":"text"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is recommended over clearing the cache or resetting the database"},{"text":" ","type":"text"},{"text":"because valid local tiles will not be downloaded again.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Resources shared with offline packs will not be affected by this method.","type":"text"}]}]}],"metadata":{"fragments":[{"text":"- ","kind":"text"},{"text":"invalidateAmbientCacheWithCompletionHandler:","kind":"identifier"}],"title":"invalidateAmbientCacheWithCompletionHandler:","role":"symbol","modules":[{"name":"MapLibre"}],"roleHeading":"Instance Method","externalID":"c:objc(cs)MLNOfflineStorage(im)invalidateAmbientCacheWithCompletionHandler:","symbolKind":"method","navigatorTitle":[{"text":"invalidateAmbientCacheWithCompletionHandler:","kind":"identifier"}]},"variants":[{"paths":["\/documentation\/maplibre\/mlnofflinestorage\/invalidateambientcachewithcompletionhandler:"],"traits":[{"interfaceLanguage":"occ"}]}],"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage"]]},"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage\/invalidateAmbientCacheWithCompletionHandler:"},"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNOfflineStorage":{"abstract":[{"type":"text","text":"MLNOfflineStorage implements a singleton (shared object) that manages offline"},{"text":" ","type":"text"},{"text":"packs and ambient caching. All of this classâ€™s instance methods are asynchronous,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"reflecting the fact that offline resources are stored in a database. The shared"},{"text":" ","type":"text"},{"text":"object maintains a canonical collection of offline packs in its ","type":"text"},{"type":"codeVoice","code":"packs"},{"text":" property.","type":"text"}],"title":"MLNOfflineStorage","type":"topic","fragments":[{"text":"MLNOfflineStorage","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage","kind":"symbol","url":"\/documentation\/maplibre\/mlnofflinestorage"},"doc://org.swift.MyProject/documentation/MapLibre":{"type":"topic","abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"kind":"symbol","title":"MapLibre","url":"\/documentation\/maplibre","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","role":"collection"},"doc://org.swift.MyProject/documentation/MapLibre/MLNOfflineStorage/invalidateAmbientCacheWithCompletionHandler:":{"fragments":[{"text":"- ","kind":"text"},{"text":"invalidateAmbientCacheWithCompletionHandler:","kind":"identifier"}],"abstract":[{"type":"text","text":"Invalidates the ambient cache. This method checks that the tiles in the"},{"type":"text","text":" "},{"type":"text","text":"ambient cache match those from the server. If the local tiles do not match"},{"text":" ","type":"text"},{"text":"those on the server, they are re-downloaded.","type":"text"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage\/invalidateAmbientCacheWithCompletionHandler:","url":"\/documentation\/maplibre\/mlnofflinestorage\/invalidateambientcachewithcompletionhandler:","title":"invalidateAmbientCacheWithCompletionHandler:","role":"symbol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"invalidateAmbientCacheWithCompletionHandler:"}]}}}